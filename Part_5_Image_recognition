import numpy as np
import cv2
from PIL import ImageGrab
from key import PressKey, ReleaseKey, W

big_tree = cv2.imread('big_tree.png')
big_tree = cv2.cvtColor(big_tree,cv2.COLOR_BGR2GRAY)
w, h = big_tree.shape[::-1]


def jump():
    PressKey(W)
    ReleaseKey(W)


while True:
    dino = np.array(ImageGrab.grab(bbox = (50,200,650,500)))
    #cv2.imshow('DINO',dino)
    #jump()
    #print(dino)
    dino_black = cv2.cvtColor(dino, cv2.COLOR_BGR2GRAY)
    #cv2.imshow('DINO_BW',dino)
    #print(dino_black)
    ret, dino_inv = cv2.threshold(dino_black,200,255,cv2.THRESH_BINARY)
    #cv2.imshow('DINO_INV',dino_inv)


    res = cv2.matchTemplate(dino_inv, big_tree, cv2.TM_CCOEFF_NORMED)
    match = .75

    loc = np.where(res >= match)

    for pt in zip(*loc[::-1]):
        cv2.rectangle(dino, pt, (pt[0]+w, pt[1]+h), (0,255,0), 2)
    
    cv2.imwrite('tree.png',dino_inv)
    cv2.imshow('DINO_BW',dino)

    if cv2.waitKey(25) & 0xFF == ord('q'):
        cv2.destroyAllWindows()
        break
